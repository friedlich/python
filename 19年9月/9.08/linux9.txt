以下命令将会露面：
    clear － 清空屏幕
    history － 显示历史列表内容

命令行编辑
Bash 使用了一个名为 Readline 的库（共享的例程集合，可以被不同的程序使用）， 来实现命令行编辑。我们已经看到一些例子。我们知道，例如，
箭头按键可以移动光标， 此外还有许多特性。想想这些额外的工具，我们可以在工作中使用。学会所有的特性 并不重要，但许多特性非常有帮助。选择自己需要的特性。
注意：下面一些按键组合（尤其使用 Alt 键的组合），可能会被 GUI 拦截来触发其它的功能。 当使用虚拟控制台时，所有的按键组合都应该正确地工作。

移动光标
下表列出了移动光标所使用的按键：
表9-1: 光标移动命令
Ctrl-a 	移动光标到行首。
Ctrl-e 	移动光标到行尾。
Ctrl-f 	光标前移一个字符；和右箭头作用一样。
Ctrl-b 	光标后移一个字符；和左箭头作用一样。
Alt-f 	光标前移一个字。
Alt-b 	光标后移一个字。
Ctrl-l 	清空屏幕，移动光标到左上角。clear 命令完成同样的工作。

表9－2列出了键盘命令，这些命令用来在命令行中编辑字符。
表9-2: 文本编辑命令
Ctrl-d 	删除光标位置的字符。
Ctrl-t 	光标位置的字符和光标前面的字符互换位置。
Alt-t 	光标位置的字和其前面的字互换位置。
Alt-l 	把从光标位置到字尾的字符转换成小写字母。
Alt-u 	把从光标位置到字尾的字符转换成大写字母。

剪切和粘贴文本
Readline 的文档使用术语 killing 和 yanking 来指我们平常所说的剪切和粘贴。 剪切下来的本文被存储在一个叫做剪切环(kill-ring)的缓冲区中。
表9-3: 剪切和粘贴命令
Ctrl-k 	剪切从光标位置到行尾的文本。
Ctrl-u 	剪切从光标位置到行首的文本。
Alt-d 	剪切从光标位置到词尾的文本。
Alt-Backspace 	剪切从光标位置到词头的文本。如果光标在一个单词的开头，剪切前一个单词。
Ctrl-y 	把剪切环中的文本粘贴到光标位置。

The Meta Key
元键
如果你冒险进入到 Readline 的文档中，你会在 bash 手册页的 READLINE 段落， 遇到一个术语”元键”（meta key）。在当今的键盘上，这个元键是指 Alt 键，但 并不总是这样。

自动补全
shell 能帮助你的另一种方式是通过一种叫做自动补全的机制。当你敲入一个命令时， 按下 tab 键，自动补全就会发生。让我们看一下这是怎样工作的。给出一个看起来 像这样的家目录：

这个实例展示了路径名自动补全，这是最常用的形式。自动补全也能对变量（如果 字的开头是一个”$”）、用户名字（单词以”~”开始）、命令（如果单词是一行的第一个单词）
和主机名（如果单词的开头是”@”）起作用。主机名自动补全只对包含在文件/etc/hosts 中的主机名有效。

有一系列的控制和元键序列与自动补全相关联：
表9-4: 自动补全命令
Alt-? 	显示可能的自动补全列表。在大多数系统中，你也可以完成这个通过按 两次 tab 键，这会更容易些。
Alt-* 	插入所有可能的自动补全。当你想要使用多个可能的匹配项时，这个很有帮助。

正如我们在第二章中讨论到的，bash 维护着一个已经执行过的命令的历史列表。这个命令列表 被保存在你家目录下，一个叫做 .bash_history 的文件里。
这个 history 工具是个有用资源， 因为它可以减少你敲键盘的次数，尤其当和命令行编辑联系起来时。
在任何时候，我们都可以浏览历史列表的内容，通过
history | less
在默认情况下，bash 会存储你所输入的最后 500 个命令。在随后的章节里，我们会知道 怎样调整这个数值。比方说我们想在自己曾经用过的命令中，
找出和/usr/bin这一目录相关的。那么我们就可以这样做：
history | grep /usr/bin

bash 会把 “!88” 展开成为历史列表中88行的内容。还有其它的历史命令展开形式，我们一会儿 讨论它们。bash 也具有增量搜索历史列表的能力。意思是在字符输入的同时，
bash 会去搜索历史列表（直接出结果，并高亮匹配的第一个字），每多输入一个字符都会使搜索结果更接近目标。输入 Ctrl-r来启动增量搜索， 接着输入你要寻找的字。
当你找到它以后，你可以敲入 Enter 来执行命令， 或者输入 Ctrl-j，从历史列表中复制这一行到当前命令行。再次输入 Ctrl-r，来找到下一个 匹配项（历史列表中向上移动）。
输入 Ctrl-g 或者 Ctrl-c，退出搜索。现在看看它的实际效果：

我们的 shell 提示符重新出现，命令行加载完毕，准备接受下一命令！ 下表列出了一些按键组合， 这些按键可以用来操作历史列表：
表9-5: 历史命令
按键 	行为
Ctrl-p 	移动到上一个历史条目。类似于上箭头按键。
Ctrl-n 	移动到下一个历史条目。类似于下箭头按键。
Alt-< 	移动到历史列表开头。
Alt-> 	移动到历史列表结尾，即当前命令行。
Ctrl-r 	反向增量搜索。从当前命令行开始，向上增量搜索。
Alt-p 	反向搜索，非增量搜索。（输入要查找的字符串，按下 Enter来执行搜索）。
Alt-n 	向前搜索，非增量。
Ctrl-o 	执行历史列表中的当前项，并移到下一个。如果你想要执行历史列表中一系列的命令，这很方便。

历史命令展开
通过使用 “!” 字符，shell 为历史列表中的命令，提供了一个特殊的展开类型。我们已经知道一个感叹号 ，其后再加上一个数字，
可以把来自历史列表中的命令插入到命令行中。这里还有一些其它的展开特性：
表9-6: 历史展开命令
!! 	重复最后一次执行的命令。可能按下上箭头按键和 enter 键更容易些。
!number 	重复历史列表中第 number 行的命令。
!string 	重复最近历史列表中，以这个字符串开头的命令。
!?string 	重复最近历史列表中，包含这个字符串的命令。
应该小心谨慎地使用 “!string” 和 “!?string” 格式，除非你完全确信历史列表条目的内容。

除了 bash 中的命令历史特性，许多 Linux 发行版包括一个叫做 script 的程序， 这个程序可以记录整个 shell 会话，
并把 shell 会话存在一个文件里面。这个命令的基本语法是：
script [file]
命令中的 file 是指用来存储 shell 会话记录的文件名。如果没有指定文件名，则使用文件 typescript。查看脚本的手册页，
可以得到一个关于 script 程序选项和特点的完整列表。