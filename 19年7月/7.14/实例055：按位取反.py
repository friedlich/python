# 题目 学习使用按位取反~。
# 程序分析 ~0=1; ~1=0;
print(~234)
print(bin(~234))
print(~~234)
print(bin(~~234))
print(bin(10))
print(bin(-10))
print(int('11111110',2))
print(int('-10',2))
a = -2&6
b = (-2)&6
print(bin(a))
print(bin(b))
print(b)
# 简单来说，按位运算就把数字转换为机器语言——二进制的数字来运算的一种运算形式。在计算机系统中，数值一律用补码来表示(存储)
# 但是我们看到的二进制数值却是数值的原码，而计算机在运算时却是用的数值的补码。正数的补码即是它本身，负数转换位原码的方法是减一取反
# 3的二进制补码是11，5的是101，-1的补码是11111111，-2的补码是11111110
# 对于负数来说，将原数按位取反后+1=原数的补码  原数：在计算机中用2进制的方式表示一个普通数字所形成的数就是原数

### 计算机中的负数表示：
# 将原数按位取反后+1=原数的补码(原数的反数)
# 原数：在计算机中用2进制的方式表示一个普通数字所形成的数就是原数
#         例如：5=00000000 00000000 00000000 00000101
# 5取反后就为11111111  11111111  11111111  11111010其结果+1就是原数的补码即为-5的2进制表示

