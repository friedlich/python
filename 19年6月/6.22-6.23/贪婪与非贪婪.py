import re
content = '发布于 2018/12/23'
print(re.findall('.*?(\d.*\d)', content))
# 这里的?表示的就是非贪婪模式，第一个.*会尽可能少地去匹配内容，因为后面跟的是\d，所以碰见第一个数字就终止了。
print(re.findall('.*(\d.*\d)', content))
# 这里的第一个.*后面没有添加问号，表示的就是贪婪模式，第一个.*会尽可能多地去匹配内容，后面跟的是\d，碰见第一个数字并不
# 一定会终止，当它匹配到 2018 的 2 的时候，发现剩下的内容依然满足(\d.*\d)，所以会一直匹配下去，直到匹配到 12 后面的/的
# 时候，发现剩下的 23 依然满足(\d.*\d)，但是如果再匹配下去，匹配到 23 的 2 的话，剩下的 3 就不满足(\d.*\d)了，所以第一
# 个.*就会停止匹配，(\d.*\d)最终匹配到的结果就只剩下 23 了。
print(re.findall('.*(\d.*?\d)', content))
# 得到的结果是['23']，原因在于第一个.*是贪婪模式，会一直匹配到 12 后面的/，这样结果就是['23']
print(re.findall('.*?(\d.*?\d)', content))
# 这里的第一个.*?表示非贪婪模式，匹配到 2018 前面的'于'之后就停止了
# 括号里的.*?也是表示非贪婪模式，括号里的内容从2018 的 2 开始匹配，因为后面一个数字是 0，那么也就满足了(\d.*?\d)，
# 所以就直接返回结果了，同样的，接下来的18也是这样，一直匹配到 23 才结束。

###
# 简单来说，贪婪模式就是尽可能多地去匹配字符，非贪婪模式就是尽可能少地去匹配字符，python 默认采取的是贪婪模式。
# 贪婪与非贪婪在使用的要慎重，因为一不小心就容易出错，匹配到的结果并不是我们想要的。